
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000460  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005f4  080005fc  000105fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005f4  080005f4  000105fc  2**0
                  CONTENTS
  4 .ARM          00000000  080005f4  080005f4  000105fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005f4  080005fc  000105fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005f4  080005f4  000105f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005f8  080005f8  000105f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005fc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005fc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000105fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000017c4  00000000  00000000  0001062c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000039c  00000000  00000000  00011df0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00012190  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00012248  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001d85  00000000  00000000  000122d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000d66  00000000  00000000  0001405d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000850f  00000000  00000000  00014dc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001d2d2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000021c  00000000  00000000  0001d350  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080005dc 	.word	0x080005dc

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080005dc 	.word	0x080005dc

080001d4 <delay>:
 */

#include "stm32f401xx.h"

void delay()
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<500000; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	; (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>

}
 80001ee:	bf00      	nop
 80001f0:	370c      	adds	r7, #12
 80001f2:	46bd      	mov	sp, r7
 80001f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	0007a11f 	.word	0x0007a11f

08000200 <main>:


int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b084      	sub	sp, #16
 8000204:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOA;
 8000206:	4b0d      	ldr	r3, [pc, #52]	; (800023c <main+0x3c>)
 8000208:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800020a:	2305      	movs	r3, #5
 800020c:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800020e:	2301      	movs	r3, #1
 8000210:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000212:	2302      	movs	r3, #2
 8000214:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000216:	2300      	movs	r3, #0
 8000218:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021a:	2300      	movs	r3, #0
 800021c:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 800021e:	2101      	movs	r1, #1
 8000220:	4806      	ldr	r0, [pc, #24]	; (800023c <main+0x3c>)
 8000222:	f000 f837 	bl	8000294 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000226:	1d3b      	adds	r3, r7, #4
 8000228:	4618      	mov	r0, r3
 800022a:	f000 f8d3 	bl	80003d4 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_NO_5);
 800022e:	2105      	movs	r1, #5
 8000230:	4802      	ldr	r0, [pc, #8]	; (800023c <main+0x3c>)
 8000232:	f000 f99a 	bl	800056a <GPIO_ToggleOutputPin>
		delay();
 8000236:	f7ff ffcd 	bl	80001d4 <delay>
		GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_NO_5);
 800023a:	e7f8      	b.n	800022e <main+0x2e>
 800023c:	40020000 	.word	0x40020000

08000240 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000240:	480d      	ldr	r0, [pc, #52]	; (8000278 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000242:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 8000244:	480d      	ldr	r0, [pc, #52]	; (800027c <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490e      	ldr	r1, [pc, #56]	; (8000280 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0e      	ldr	r2, [pc, #56]	; (8000284 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1



  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0b      	ldr	r2, [pc, #44]	; (8000288 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0b      	ldr	r4, [pc, #44]	; (800028c <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800026a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800026e:	f000 f991 	bl	8000594 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000272:	f7ff ffc5 	bl	8000200 <main>

08000276 <LoopForever>:

LoopForever:
    b LoopForever
 8000276:	e7fe      	b.n	8000276 <LoopForever>
  ldr   r0, =_estack
 8000278:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800027c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000280:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000284:	080005fc 	.word	0x080005fc
  ldr r2, =_sbss
 8000288:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800028c:	2000001c 	.word	0x2000001c

08000290 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000290:	e7fe      	b.n	8000290 <ADC_IRQHandler>
	...

08000294 <GPIO_PeriClockControl>:
#include "stm32f401xx_gpio_driver.h"



void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000294:	b480      	push	{r7}
 8000296:	b083      	sub	sp, #12
 8000298:	af00      	add	r7, sp, #0
 800029a:	6078      	str	r0, [r7, #4]
 800029c:	460b      	mov	r3, r1
 800029e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002a0:	78fb      	ldrb	r3, [r7, #3]
 80002a2:	2b01      	cmp	r3, #1
 80002a4:	d141      	bne.n	800032a <GPIO_PeriClockControl+0x96>
	{
		if(pGPIOx == GPIOA)
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	4a43      	ldr	r2, [pc, #268]	; (80003b8 <GPIO_PeriClockControl+0x124>)
 80002aa:	4293      	cmp	r3, r2
 80002ac:	d106      	bne.n	80002bc <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002ae:	4b43      	ldr	r3, [pc, #268]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b2:	4a42      	ldr	r2, [pc, #264]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002b4:	f043 0301 	orr.w	r3, r3, #1
 80002b8:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PCLK_DI();
		}
	}

}
 80002ba:	e077      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	4a40      	ldr	r2, [pc, #256]	; (80003c0 <GPIO_PeriClockControl+0x12c>)
 80002c0:	4293      	cmp	r3, r2
 80002c2:	d106      	bne.n	80002d2 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002c4:	4b3d      	ldr	r3, [pc, #244]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a3c      	ldr	r2, [pc, #240]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002ca:	f043 0302 	orr.w	r3, r3, #2
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d0:	e06c      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a3b      	ldr	r2, [pc, #236]	; (80003c4 <GPIO_PeriClockControl+0x130>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002da:	4b38      	ldr	r3, [pc, #224]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a37      	ldr	r2, [pc, #220]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002e0:	f043 0304 	orr.w	r3, r3, #4
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e6:	e061      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a37      	ldr	r2, [pc, #220]	; (80003c8 <GPIO_PeriClockControl+0x134>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002f0:	4b32      	ldr	r3, [pc, #200]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a31      	ldr	r2, [pc, #196]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80002f6:	f043 0308 	orr.w	r3, r3, #8
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e056      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a32      	ldr	r2, [pc, #200]	; (80003cc <GPIO_PeriClockControl+0x138>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000306:	4b2d      	ldr	r3, [pc, #180]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a2c      	ldr	r2, [pc, #176]	; (80003bc <GPIO_PeriClockControl+0x128>)
 800030c:	f043 0310 	orr.w	r3, r3, #16
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e04b      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a2e      	ldr	r2, [pc, #184]	; (80003d0 <GPIO_PeriClockControl+0x13c>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d147      	bne.n	80003ac <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_EN();
 800031c:	4b27      	ldr	r3, [pc, #156]	; (80003bc <GPIO_PeriClockControl+0x128>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a26      	ldr	r2, [pc, #152]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000322:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e040      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		if(pGPIOx == GPIOA)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a22      	ldr	r2, [pc, #136]	; (80003b8 <GPIO_PeriClockControl+0x124>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_DI();
 8000332:	4b22      	ldr	r3, [pc, #136]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a21      	ldr	r2, [pc, #132]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000338:	f023 0301 	bic.w	r3, r3, #1
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e035      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a1f      	ldr	r2, [pc, #124]	; (80003c0 <GPIO_PeriClockControl+0x12c>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0xc2>
			GPIOB_PCLK_DI();
 8000348:	4b1c      	ldr	r3, [pc, #112]	; (80003bc <GPIO_PeriClockControl+0x128>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a1b      	ldr	r2, [pc, #108]	; (80003bc <GPIO_PeriClockControl+0x128>)
 800034e:	f023 0302 	bic.w	r3, r3, #2
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e02a      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a1a      	ldr	r2, [pc, #104]	; (80003c4 <GPIO_PeriClockControl+0x130>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xd8>
			GPIOC_PCLK_DI();
 800035e:	4b17      	ldr	r3, [pc, #92]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a16      	ldr	r2, [pc, #88]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000364:	f023 0304 	bic.w	r3, r3, #4
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e01f      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a16      	ldr	r2, [pc, #88]	; (80003c8 <GPIO_PeriClockControl+0x134>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xee>
			GPIOD_PCLK_DI();
 8000374:	4b11      	ldr	r3, [pc, #68]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a10      	ldr	r2, [pc, #64]	; (80003bc <GPIO_PeriClockControl+0x128>)
 800037a:	f023 0308 	bic.w	r3, r3, #8
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e014      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a11      	ldr	r2, [pc, #68]	; (80003cc <GPIO_PeriClockControl+0x138>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0x104>
			GPIOE_PCLK_DI();
 800038a:	4b0c      	ldr	r3, [pc, #48]	; (80003bc <GPIO_PeriClockControl+0x128>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a0b      	ldr	r2, [pc, #44]	; (80003bc <GPIO_PeriClockControl+0x128>)
 8000390:	f023 0310 	bic.w	r3, r3, #16
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e009      	b.n	80003ac <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a0d      	ldr	r2, [pc, #52]	; (80003d0 <GPIO_PeriClockControl+0x13c>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d105      	bne.n	80003ac <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_DI();
 80003a0:	4b06      	ldr	r3, [pc, #24]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a05      	ldr	r2, [pc, #20]	; (80003bc <GPIO_PeriClockControl+0x128>)
 80003a6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	bf00      	nop
 80003ae:	370c      	adds	r7, #12
 80003b0:	46bd      	mov	sp, r7
 80003b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b6:	4770      	bx	lr
 80003b8:	40020000 	.word	0x40020000
 80003bc:	40023800 	.word	0x40023800
 80003c0:	40020400 	.word	0x40020400
 80003c4:	40020800 	.word	0x40020800
 80003c8:	40020c00 	.word	0x40020c00
 80003cc:	40021000 	.word	0x40021000
 80003d0:	40021c00 	.word	0x40021c00

080003d4 <GPIO_Init>:

/*
 * GPIO Init/DeInit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80003d4:	b480      	push	{r7}
 80003d6:	b085      	sub	sp, #20
 80003d8:	af00      	add	r7, sp, #0
 80003da:	6078      	str	r0, [r7, #4]

	uint32_t temp =0;
 80003dc:	2300      	movs	r3, #0
 80003de:	60fb      	str	r3, [r7, #12]

	//1. Configure The mode of the pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	795b      	ldrb	r3, [r3, #5]
 80003e4:	2b03      	cmp	r3, #3
 80003e6:	d81e      	bhi.n	8000426 <GPIO_Init+0x52>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	795b      	ldrb	r3, [r3, #5]
 80003ec:	461a      	mov	r2, r3
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	791b      	ldrb	r3, [r3, #4]
 80003f2:	005b      	lsls	r3, r3, #1
 80003f4:	fa02 f303 	lsl.w	r3, r2, r3
 80003f8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	681a      	ldr	r2, [r3, #0]
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	791b      	ldrb	r3, [r3, #4]
 8000404:	4619      	mov	r1, r3
 8000406:	2303      	movs	r3, #3
 8000408:	408b      	lsls	r3, r1
 800040a:	43db      	mvns	r3, r3
 800040c:	4619      	mov	r1, r3
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	400a      	ands	r2, r1
 8000414:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	6819      	ldr	r1, [r3, #0]
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	68fa      	ldr	r2, [r7, #12]
 8000422:	430a      	orrs	r2, r1
 8000424:	601a      	str	r2, [r3, #0]
	}
	else
	{
		//later
	}
	temp = 0;
 8000426:	2300      	movs	r3, #0
 8000428:	60fb      	str	r3, [r7, #12]

	//2. configure The speed of the pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	799b      	ldrb	r3, [r3, #6]
 800042e:	461a      	mov	r2, r3
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	791b      	ldrb	r3, [r3, #4]
 8000434:	005b      	lsls	r3, r3, #1
 8000436:	fa02 f303 	lsl.w	r3, r2, r3
 800043a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	689a      	ldr	r2, [r3, #8]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	4619      	mov	r1, r3
 8000448:	2303      	movs	r3, #3
 800044a:	408b      	lsls	r3, r1
 800044c:	43db      	mvns	r3, r3
 800044e:	4619      	mov	r1, r3
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	400a      	ands	r2, r1
 8000456:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	6899      	ldr	r1, [r3, #8]
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	68fa      	ldr	r2, [r7, #12]
 8000464:	430a      	orrs	r2, r1
 8000466:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000468:	2300      	movs	r3, #0
 800046a:	60fb      	str	r3, [r7, #12]

	//3. configure The pupd of the pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	79db      	ldrb	r3, [r3, #7]
 8000470:	461a      	mov	r2, r3
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	791b      	ldrb	r3, [r3, #4]
 8000476:	005b      	lsls	r3, r3, #1
 8000478:	fa02 f303 	lsl.w	r3, r2, r3
 800047c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	68da      	ldr	r2, [r3, #12]
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	4619      	mov	r1, r3
 800048a:	2303      	movs	r3, #3
 800048c:	408b      	lsls	r3, r1
 800048e:	43db      	mvns	r3, r3
 8000490:	4619      	mov	r1, r3
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	400a      	ands	r2, r1
 8000498:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	68d9      	ldr	r1, [r3, #12]
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	68fa      	ldr	r2, [r7, #12]
 80004a6:	430a      	orrs	r2, r1
 80004a8:	60da      	str	r2, [r3, #12]

	temp = 0;
 80004aa:	2300      	movs	r3, #0
 80004ac:	60fb      	str	r3, [r7, #12]

	//4. configure The otype of the pin
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	7a1b      	ldrb	r3, [r3, #8]
 80004b2:	461a      	mov	r2, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	fa02 f303 	lsl.w	r3, r2, r3
 80004bc:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	685a      	ldr	r2, [r3, #4]
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	791b      	ldrb	r3, [r3, #4]
 80004c8:	4619      	mov	r1, r3
 80004ca:	2301      	movs	r3, #1
 80004cc:	408b      	lsls	r3, r1
 80004ce:	43db      	mvns	r3, r3
 80004d0:	4619      	mov	r1, r3
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	400a      	ands	r2, r1
 80004d8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	6859      	ldr	r1, [r3, #4]
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	68fa      	ldr	r2, [r7, #12]
 80004e6:	430a      	orrs	r2, r1
 80004e8:	605a      	str	r2, [r3, #4]

	temp = 0;
 80004ea:	2300      	movs	r3, #0
 80004ec:	60fb      	str	r3, [r7, #12]

	//5. configure The alt Functionality of the pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_AF)
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	795b      	ldrb	r3, [r3, #5]
 80004f2:	2b02      	cmp	r3, #2
 80004f4:	d133      	bne.n	800055e <GPIO_Init+0x18a>
	{
		uint8_t temp1,temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	791b      	ldrb	r3, [r3, #4]
 80004fa:	08db      	lsrs	r3, r3, #3
 80004fc:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	f003 0307 	and.w	r3, r3, #7
 8000506:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	7afa      	ldrb	r2, [r7, #11]
 800050e:	3208      	adds	r2, #8
 8000510:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	7a5b      	ldrb	r3, [r3, #9]
 8000518:	461a      	mov	r2, r3
 800051a:	7abb      	ldrb	r3, [r7, #10]
 800051c:	009b      	lsls	r3, r3, #2
 800051e:	fa02 f303 	lsl.w	r3, r2, r3
 8000522:	43db      	mvns	r3, r3
 8000524:	4618      	mov	r0, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	7afa      	ldrb	r2, [r7, #11]
 800052c:	4001      	ands	r1, r0
 800052e:	3208      	adds	r2, #8
 8000530:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	7afa      	ldrb	r2, [r7, #11]
 800053a:	3208      	adds	r2, #8
 800053c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	7a5b      	ldrb	r3, [r3, #9]
 8000544:	461a      	mov	r2, r3
 8000546:	7abb      	ldrb	r3, [r7, #10]
 8000548:	009b      	lsls	r3, r3, #2
 800054a:	fa02 f303 	lsl.w	r3, r2, r3
 800054e:	4618      	mov	r0, r3
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	7afa      	ldrb	r2, [r7, #11]
 8000556:	4301      	orrs	r1, r0
 8000558:	3208      	adds	r2, #8
 800055a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 800055e:	bf00      	nop
 8000560:	3714      	adds	r7, #20
 8000562:	46bd      	mov	sp, r7
 8000564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000568:	4770      	bx	lr

0800056a <GPIO_ToggleOutputPin>:
	}
}
void     GPIO_WriteToOuputPort(GPIO_RegDef_t *pGPIOx,uint16_t Value){
	pGPIOx->ODR =  Value;
}
void     GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 800056a:	b480      	push	{r7}
 800056c:	b083      	sub	sp, #12
 800056e:	af00      	add	r7, sp, #0
 8000570:	6078      	str	r0, [r7, #4]
 8000572:	460b      	mov	r3, r1
 8000574:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	695b      	ldr	r3, [r3, #20]
 800057a:	78fa      	ldrb	r2, [r7, #3]
 800057c:	2101      	movs	r1, #1
 800057e:	fa01 f202 	lsl.w	r2, r1, r2
 8000582:	405a      	eors	r2, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	615a      	str	r2, [r3, #20]
}
 8000588:	bf00      	nop
 800058a:	370c      	adds	r7, #12
 800058c:	46bd      	mov	sp, r7
 800058e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000592:	4770      	bx	lr

08000594 <__libc_init_array>:
 8000594:	b570      	push	{r4, r5, r6, lr}
 8000596:	4e0d      	ldr	r6, [pc, #52]	; (80005cc <__libc_init_array+0x38>)
 8000598:	4c0d      	ldr	r4, [pc, #52]	; (80005d0 <__libc_init_array+0x3c>)
 800059a:	1ba4      	subs	r4, r4, r6
 800059c:	10a4      	asrs	r4, r4, #2
 800059e:	2500      	movs	r5, #0
 80005a0:	42a5      	cmp	r5, r4
 80005a2:	d109      	bne.n	80005b8 <__libc_init_array+0x24>
 80005a4:	4e0b      	ldr	r6, [pc, #44]	; (80005d4 <__libc_init_array+0x40>)
 80005a6:	4c0c      	ldr	r4, [pc, #48]	; (80005d8 <__libc_init_array+0x44>)
 80005a8:	f000 f818 	bl	80005dc <_init>
 80005ac:	1ba4      	subs	r4, r4, r6
 80005ae:	10a4      	asrs	r4, r4, #2
 80005b0:	2500      	movs	r5, #0
 80005b2:	42a5      	cmp	r5, r4
 80005b4:	d105      	bne.n	80005c2 <__libc_init_array+0x2e>
 80005b6:	bd70      	pop	{r4, r5, r6, pc}
 80005b8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005bc:	4798      	blx	r3
 80005be:	3501      	adds	r5, #1
 80005c0:	e7ee      	b.n	80005a0 <__libc_init_array+0xc>
 80005c2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005c6:	4798      	blx	r3
 80005c8:	3501      	adds	r5, #1
 80005ca:	e7f2      	b.n	80005b2 <__libc_init_array+0x1e>
 80005cc:	080005f4 	.word	0x080005f4
 80005d0:	080005f4 	.word	0x080005f4
 80005d4:	080005f4 	.word	0x080005f4
 80005d8:	080005f8 	.word	0x080005f8

080005dc <_init>:
 80005dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005de:	bf00      	nop
 80005e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005e2:	bc08      	pop	{r3}
 80005e4:	469e      	mov	lr, r3
 80005e6:	4770      	bx	lr

080005e8 <_fini>:
 80005e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ea:	bf00      	nop
 80005ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ee:	bc08      	pop	{r3}
 80005f0:	469e      	mov	lr, r3
 80005f2:	4770      	bx	lr
